{"version":3,"sources":["src/app/openFormBtnToggle/openFormBtnToggle.js","src/app/openModal/openModal.js","src/app/utilities/utilities.js","src/app/utilitiesLS/utilitiesLS.js","src/app/createTask/createTask.js","src/app/createForm/createForm.js","src/app/clearTasks/clearTasks.js","src/index.js"],"names":["openTaskFormBtnToggle","openTaskFormBtn","document","querySelector","textContent","openModal","child","modal","createElement","className","removeModalBtn","appendChild","addEventListener","e","remove","utilities","addItem","arr","item","removeItem","id","filter","editItem","editedItem","getFormData","formElements","formData","Object","values","map","element","type","name","value","setFormData","editedFormElements","forEach","utilitiesLS","setToLS","target","localStorage","setItem","JSON","stringify","createId","Id","getItem","parseInt","parse","editItemFromLS","items","editedItems","saveToLS","removeFromLS","createTask","task","taskElement","innerHTML","description","removeTask","btnData","btn","body","firstElementChild","insertBefore","childNodes","createForm","editTask","tasksSection","btnContent","taskForm","elements","preventDefault","newTask","editedTask","parentElement","clearTasks","clearTasksBtn","childElementCount","Array","from","children","clear","firstChild","alert","setTimeout","tasks"],"mappings":"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","file":"src.80c22b30.map","sourceRoot":"..","sourcesContent":["const openTaskFormBtnToggle = () => {\r\n  const openTaskFormBtn = document.querySelector('.open-form-btn');\r\n  if (openTaskFormBtn.textContent === 'Add Task') {\r\n    openTaskFormBtn.textContent = 'Close';\r\n  } else {\r\n    openTaskFormBtn.textContent = 'Add Task';\r\n  }\r\n};\r\nexport default openTaskFormBtnToggle;\r\n","import openFormBtnToggle from '../openFormBtnToggle/openFormBtnToggle';\r\nconst openModal = child => {\r\n  const modal = document.createElement('div');\r\n  modal.className = 'modal';\r\n  const removeModalBtn = document.createElement('button');\r\n  removeModalBtn.textContent = 'X';\r\n  removeModalBtn.className = 'remove-modal-btn';\r\n  modal.appendChild(removeModalBtn);\r\n  modal.appendChild(child);\r\n  removeModalBtn.addEventListener('click', e => {\r\n    modal.remove();\r\n    openFormBtnToggle();\r\n  });\r\n  return modal;\r\n};\r\nexport default openModal;\r\n","const addItem = (arr, item) => {\r\n  return [...arr, item];\r\n};\r\nconst removeItem = (arr, id) => {\r\n  return arr.filter(item => item.id !== id);\r\n};\r\nconst editItem = (arr, id, editedItem) => {\r\n  return addItem(removeItem(arr, id), editedItem);\r\n};\r\nconst getFormData = formElements => {\r\n  const formData = {};\r\n  Object.values(formElements).map(element => {\r\n    if (element.type === 'submit') {\r\n    } else {\r\n      formData[element.name] = element.value;\r\n    }\r\n  });\r\n  return formData;\r\n};\r\nconst setFormData = (formElements, item) => {\r\n  const editedFormElements = { ...formElements };\r\n  Object.values(editedFormElements).forEach(element => {\r\n    if (element.type === 'submit') {\r\n    } else {\r\n      element.value = item[element.name];\r\n    }\r\n  });\r\n  return editedFormElements;\r\n};\r\n\r\nconst utilities = {\r\n  removeItem,\r\n  addItem,\r\n  editItem,\r\n  getFormData,\r\n  setFormData,\r\n};\r\nexport default utilities;\r\n","import utilities from '../utilities/utilities';\r\nconst setToLS = (target, value) => {\r\n  localStorage.setItem(target, JSON.stringify(value));\r\n};\r\nconst createId = () => {\r\n  let Id;\r\n  if (localStorage.getItem('Id')) {\r\n    Id = parseInt(JSON.parse(localStorage.getItem('Id')));\r\n    Id++;\r\n  } else {\r\n    Id = 1;\r\n  }\r\n  setToLS('Id', Id);\r\n  return Id;\r\n};\r\nconst editItemFromLS = (target, id, editedItem) => {\r\n  const items = JSON.parse(localStorage.getItem(target));\r\n  const editedItems = utilities.editItem(items, id, editedItem);\r\n  setToLS(target, editedItems);\r\n};\r\nconst saveToLS = (target, item) => {\r\n  let items;\r\n  if (localStorage.getItem(target)) {\r\n    items = utilities.addItem(JSON.parse(localStorage.getItem(target)), item);\r\n  } else {\r\n    items = utilities.addItem([], item);\r\n  }\r\n  setToLS(target, items);\r\n};\r\nconst removeFromLS = (target, id) => {\r\n  const items = [...JSON.parse(localStorage.getItem(target))];\r\n  const editedItems = utilities.removeItem(items, id);\r\n  setToLS(target, editedItems);\r\n};\r\nconst utilitiesLS = {\r\n  setToLS,\r\n  saveToLS,\r\n  removeFromLS,\r\n  createId,\r\n  editItemFromLS\r\n};\r\nexport default utilitiesLS;\r\n","import utilitiesLS from '../utilitiesLS/utilitiesLS';\r\nimport openModal from '../openModal/openModal';\r\nimport createForm from '../createForm/createForm';\r\nimport openFormBtnToggle from '../openFormBtnToggle/openFormBtnToggle';\r\nconst createTask = task => {\r\n  const taskElement = document.createElement('details');\r\n  taskElement.className = 'task';\r\n  taskElement.innerHTML = `\r\n    <summary>${task.name}</summary>\r\n    <p>${task.description}</p>\r\n    `;\r\n  const removeTask = () => {\r\n    taskElement.remove();\r\n    utilitiesLS.removeFromLS('tasks', task.id);\r\n  };\r\n  const btns = [{ type: 'delete' }, { type: 'edit' }];\r\n  btns.forEach(btnData => {\r\n    const btn = document.createElement('button');\r\n    btn.textContent = btnData.type;\r\n    btn.className = `btn-${btnData.type}`;\r\n    btn.addEventListener('click', e => {\r\n      if (btnData.type === 'delete') {\r\n        removeTask();\r\n      } else if (btnData.type === 'edit') {\r\n        const body = document.body;\r\n        if (body.firstElementChild.className === 'modal') {\r\n          body.firstElementChild.remove();\r\n          openFormBtnToggle();\r\n        }\r\n        const modal = openModal(createForm('edit', task, removeTask));\r\n        body.insertBefore(modal, body.childNodes[0]);\r\n        openFormBtnToggle();\r\n      }\r\n    });\r\n\r\n    taskElement.appendChild(btn);\r\n  });\r\n\r\n  return taskElement;\r\n};\r\nexport default createTask;\r\n","import createTask from '../createTask/createTask';\r\nimport utilities from '../utilities/utilities';\r\nimport utilitiesLS from '../utilitiesLS/utilitiesLS';\r\nimport openFormBtnToggle from '../openFormBtnToggle/openFormBtnToggle';\r\nconst createForm = (type, editTask, removeTask) => {\r\n  const tasksSection = document.querySelector('.tasks-section');\r\n  let btnContent = '';\r\n  if (type === 'add') {\r\n    btnContent = 'Add Task';\r\n  } else if (type === 'edit') {\r\n    btnContent = 'Edit Task';\r\n  }\r\n  const taskForm = document.createElement('form');\r\n  taskForm.className = 'task-form';\r\n  taskForm.innerHTML = `\r\n  <input type=\"text\" name=\"name\" placeholder=\"Task Name\" required>\r\n  <input type=\"text\" name=\"description\" placeholder=\"Task Description\" required>\r\n  <button class=\"submit-btn\">${btnContent}</button>`;\r\n  const formElements = taskForm.elements;\r\n  if (type === 'edit') {\r\n    utilities.setFormData(formElements, editTask);\r\n  }\r\n  taskForm.addEventListener('submit', e => {\r\n    e.preventDefault();\r\n    if (type === 'add') {\r\n      const newTask = utilities.getFormData(formElements);\r\n      newTask['id'] = utilitiesLS.createId();\r\n      utilitiesLS.saveToLS('tasks', newTask);\r\n      tasksSection.appendChild(createTask(newTask));\r\n    } else if (type === 'edit') {\r\n      const editedTask = utilities.getFormData(formElements);\r\n      removeTask();\r\n      tasksSection.appendChild(createTask(editedTask));\r\n      editedTask['id'] = editTask.id;\r\n      utilitiesLS.editItemFromLS('tasks', editTask.id, editedTask);\r\n    }\r\n    openFormBtnToggle();\r\n\r\n    taskForm.parentElement.remove();\r\n  });\r\n  return taskForm;\r\n};\r\nexport default createForm;\r\n","const clearTasks = () => {\r\n  const clearTasksBtn = document.querySelector('.clear-tasks-btn');\r\n  const tasksSection = document.querySelector('.tasks-section');\r\n  const body = document.body;\r\n  clearTasksBtn.addEventListener('click', e => {\r\n    if (tasksSection.childElementCount) {\r\n      Array.from(tasksSection.children).forEach(child => child.remove());\r\n      localStorage.clear();\r\n    } else {\r\n      if (body.firstChild.className === 'alert') {\r\n      } else {\r\n        const alert = document.createElement('p');\r\n        alert.className = 'alert';\r\n        alert.textContent = \"There aren't any tasks\";\r\n        body.insertBefore(alert, body.childNodes[0]);\r\n        setTimeout(() => {\r\n          alert.remove();\r\n        }, 2000);\r\n      }\r\n    }\r\n  });\r\n};\r\nexport default clearTasks;\r\n","'use strict';\r\nimport './style/index.scss';\r\nimport openModal from './app/openModal/openModal';\r\nimport createForm from './app/createForm/createForm';\r\nimport createTask from './app/createTask/createTask';\r\nimport openTaskFormBtnToggle from './app/openFormBtnToggle/openFormBtnToggle';\r\nimport clearTasks from './app/clearTasks/clearTasks';\r\nconst openTaskFormBtn = document.querySelector('.open-form-btn');\r\nclearTasks();\r\nopenTaskFormBtn.addEventListener('click', e => {\r\n  const body = document.body;\r\n  if (body.firstElementChild.className === 'modal') {\r\n    body.firstElementChild.remove();\r\n    openTaskFormBtnToggle();\r\n  } else {\r\n    body.insertBefore(openModal(createForm('add')), body.childNodes[0]);\r\n    openTaskFormBtnToggle();\r\n  }\r\n});\r\nif (localStorage.getItem('tasks')) {\r\n  const tasks = JSON.parse(localStorage.getItem('tasks'));\r\n  const tasksSection = document.querySelector('.tasks-section');\r\n  tasks.forEach(task => {\r\n    tasksSection.appendChild(createTask(task));\r\n  });\r\n}\r\n"]}